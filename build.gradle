import groovy.xml.MarkupBuilder
import org.jooq.codegen.GenerationTool
import javax.xml.bind.JAXBContext

group 'online.cv'
version '0.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.flywaydb.flyway'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath 'org.postgresql:postgresql:42.1.0'
        classpath "org.flywaydb:flyway-gradle-plugin:5.2.0"
        classpath 'org.jooq:jooq-codegen:3.11.5'
        classpath 'com.sun.xml.bind:jaxb-impl:2.2.11'
        classpath 'com.sun.xml.bind:jaxb-core:2.2.11'
        classpath 'com.sun.activation:javax.activation:1.2.0'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.5.RELEASE'

    compile("org.springframework.boot:spring-boot-starter-security:2.0.5.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-web:2.0.5.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-jooq:2.0.5.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-jdbc:2.0.5.RELEASE")
    compile("io.jsonwebtoken:jjwt:0.9.1")
    compile("org.jooq:jooq:3.11.5")
    compile("com.zaxxer:HikariCP:2.6.2")
    compile("com.google.guava:guava:27.0-jre")
    compile("com.sun.activation:javax.activation:1.2.0")

    runtime("org.postgresql:postgresql:42.1.0")
}

bootJar {
    version =  '0.1'
}

flyway {
    driver = 'org.postgresql.Driver'
    url = 'jdbc:postgresql://127.0.0.1:5432/online_cv'
    user = 'postgres'
    password = 'postgres'
    schemas = ['public', 'data']
    table = 'schema_history'
    locations = ['filesystem:src/main/resources/migrations/']
}

task generate {
    doLast {
        def writer = new StringWriter()
        new MarkupBuilder(writer).configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.11.0.xsd') {
            jdbc() {
                driver('org.postgresql.Driver')
                url('jdbc:postgresql://127.0.0.1:5432/online_cv')
                user('postgres')
                password('postgres')
            }
            generator() {
                database() {
                    name('org.jooq.meta.postgres.PostgresDatabase')
                    schemata() {
                        schema() {
                            inputSchema('public')
                        }
                    }
                }

                generate([:]) {
                    pojos true
                    daos true
                }
                target() {
                    packageName('com.online.cv.db')
                    directory('src/main/java')
                }
            }
        }
        def jaxbContext = JAXBContext.newInstance(org.jooq.meta.jaxb.Configuration.class)
        def unmarshaller = jaxbContext.createUnmarshaller()

        GenerationTool.main(
                unmarshaller.unmarshal(
                        new StringReader(writer.toString()))
        )
    }
}
